language: perl
arch:
 - arm64
matrix:
 include:
  - dist: xenial
    env: USE_SYSTEM_PERL=1 WINDOW_MANAGER=twm
    language: minimal
  - dist: bionic
    env: USE_SYSTEM_PERL=1 WINDOW_MANAGER=fvwm
    language: minimal
  - dist: focal
    env: USE_SYSTEM_PERL=1 WINDOW_MANAGER=metacity
    language: minimal
  - dist: xenial
    env: USE_SYSTEM_PERL=1 WINDOW_MANAGER=xfwm4
    language: minimal
  - dist: bionic
    env: USE_SYSTEM_PERL=1 USE_IMAGER=1 WINDOW_MANAGER=xfwm4
    language: minimal
  - dist: focal
    env: USE_SYSTEM_PERL=1 WINDOW_MANAGER=fluxbox
    language: minimal
  - dist: xenial
    env: USE_SYSTEM_PERL=1 WINDOW_MANAGER=sawfish
    language: minimal
  - dist: bionic
    env: USE_SYSTEM_PERL=1 WINDOW_MANAGER=kwin
    language: minimal
  - dist: focal
    perl: 5.32
    env: WINDOW_MANAGER=fvwm

before_install:
 - sudo apt-get update -qq
 - sudo apt-get install -qq xvfb libx11-dev libfreetype6-dev libxft-dev libpng-dev libz-dev libjpeg-dev $([ "$WINDOW_MANAGER" = "kwin" ] && echo -n "kde-window-manager" || echo -n $WINDOW_MANAGER) $([ "$USE_IMAGER" = "1" ] && echo -n "libimager-perl" || echo -n "")
 - '[ "$USE_SYSTEM_PERL" = "1" ] && sudo apt-get install -qq perl-tk || true'
 - Xvfb :123 &
 - export DISPLAY=:123
 # Wait until X server is available
 - perl -MIO::Socket::INET -e 'for (1..10) { IO::Socket::INET->new(PeerAddr => "localhost:6123") and exit; sleep 1 }'
 - $WINDOW_MANAGER &
 # Wait until window manager is running
 - sleep 2
install:
 # For system perl all dependencies (Tk) are already installed
 # Skipping this step saves some seconds, as the EUMM upgrade
 # is not done.
 - '[ "$USE_SYSTEM_PERL" = "1" ] && true || cpanm --quiet --installdeps --notest .'

script:
 - perl Makefile.PL && make test HARNESS_TIMER=1 HARNESS_OPTIONS=j4:c

branches:
 except:
  - /appveyor/
  - /github-actions/
  - /gitlab/
  - /doozer/
